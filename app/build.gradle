plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}
def des = rootProject.ext.dependencies
android {
    ndkVersion '21.3.6528147'
    compileSdkVersion project.COMPILE_SDK_VERSION.toInteger()
    defaultConfig {
        configurations.all {
            resolutionStrategy { force 'androidx.core:core-ktx:1.6.0' }
        }

        applicationId "com.xxf.arch.test"
        minSdkVersion project.MIN_SDK_VERSION.toInteger()
        targetSdkVersion project.TARGET_SDK_VERSION.toInteger()
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        // for view binding :
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':libs')
    // implementation 'com.github.NBXXF:xxf_android:2.6.9'


    implementation 'com.github.peter1492:LongScreenshot:1.0'
    //To runtime Permission
    implementation 'com.karumi:dexter:5.0.0'

    debugImplementation 'com.apkfuns.logutils:library:1.7.5'
    releaseImplementation 'com.apkfuns.logutils:logutils-no-op:1.7.5'

   // implementation  'com.github.wendux:DSBridge-Android:3.0-SNAPSHOT'
   // implementation 'androidx.draganddrop:draganddrop:1.0.0'
    //implementation 'org.apache.commons:commons-lang3:3.12.0'


//    implementation project(path: ':lib_spi_annotation')
//    kapt project(path: ':lib_spi_compiler')
}
